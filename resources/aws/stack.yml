AWSTemplateFormatVersion: 2010-09-09

Description: AWS CloudWatch ELK Logging Solution

Parameters:
  DomainName:
    Description: Name for the Amazon ES Domain.
    Type: String
    Default: cloudwatch-logs

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Elasticsearch Configuration
      Parameters:
      - DomainName
    ParameterLabels:
      DomainName:
        default: Domain Name

# Mappings:

Resources:
  #
  # Elasticsearch Resources
  # [LogsCluster]
  #
  LogsCluster:
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: !Ref DomainName
      ElasticsearchVersion: 6.2
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: true
        InstanceCount: 2
        ZoneAwarenessEnabled: true
        InstanceType: r4.large.elasticsearch
        DedicatedMasterType: t2.small.elasticsearch
        DedicatedMasterCount: 3
      EBSOptions:
        EBSEnabled: true
        Iops: 0
        VolumeSize: 20
        VolumeType: gp2
      SnapshotOptions:
        AutomatedSnapshotStartHour: 0
      AccessPolicies:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - es:*
          Condition:
            IpAddress:
              aws:SourceIp:
              - 144.121.162.240/30
              - 4.14.170.240/29
          Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true

  #
  # Log Streaming Resources
  # [LogsArchive, LogstreamerLogGroup, LogstreamerS3Stream, LogstreamerESStream, LogstreamerRole, Logstreamer]
  #
  LogsArchive:
    Type: AWS::S3::Bucket
    # DeletionPolicy: Retain

  LogstreamerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/kinesisfirehose/cloudwatch-logstreamer
      RetentionInDays: 30

  LogstreamerS3Stream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref LogstreamerLogGroup
      LogStreamName: s3backup

  LogstreamerESStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref LogstreamerLogGroup
      LogStreamName: elasticsearch-delivery

  LogstreamerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: firehose-logstreamer-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: firehose-logstreamer-policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:AbortMultipartUpload
            - s3:GeBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            Resource:
            - !Sub arn:aws:s3:::${LogsArchive}
            - !Sub arn:aws:s3:::${LogsArchive}/*
          - Effect: Allow
            Action:
            - logs:Create*
            - logs:Put*
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*:log-stream:*
          - Effect: Allow
            Action:
            - es:ESHttp*
            - es:Describe*
            Resource:
            - !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*

  Logstreamer:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: cloudwatch-logstreamer
      ElasticsearchDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 50
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: /aws/kinesisfirehose/cloudwatch-logstreamer
          LogStreamName: elasticsearch-delivery
        DomainARN: !GetAtt LogsCluster.DomainArn
        IndexName: cwlogs
        IndexRotationPeriod: OneDay
        # ProcessingConfiguration:
        RetryOptions:
          DurationInSeconds: 60
        RoleARN: !GetAtt LogstreamerRole.Arn
        S3BackupMode: AllDocuments
        S3Configuration:
          BucketARN: !Sub arn:aws:s3:::${LogsArchive}
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 50
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: /aws/kinesisfirehose/cloudwatch-logstreamer
            LogStreamName: s3backup
          CompressionFormat: UNCOMPRESSED
          Prefix: cloudwatch-logs/
          RoleARN: !GetAtt LogstreamerRole.Arn
        TypeName: cwlogs

  #
  # Log Put Resources
  # [LogPutRole, LogPutPolicy]
  #
  LogPutRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudwatch-put-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - !Sub logs.${AWS::Region}.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /

  LogPutPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cloudwatch-put-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - firehose:*
          Resource:
          - !GetAtt Logstreamer.Arn
        - Effect: Allow
          Action:
          - iam:PassRole
          Resource:
          - !GetAtt LogPutRole.Arn
      Roles:
      - Ref: LogPutRole
